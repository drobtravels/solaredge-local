# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: status.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cstatus.proto\"\xee\x0f\n\x06Status\x12\n\n\x02sn\x18\x01 \x01(\t\x12\x1a\n\x04site\x18\x02 \x01(\x0b\x32\x0c.Status.Site\x12\x11\n\tpowerWatt\x18\x03 \x01(\x02\x12\x0f\n\x07voltage\x18\x04 \x01(\x02\x12\x13\n\x0b\x66requencyHz\x18\x05 \x01(\x02\x12\x32\n\x10optimizersStatus\x18\x06 \x01(\x0b\x32\x18.Status.OptimizersStatus\x12\x0b\n\x03sOk\x18\x07 \x01(\x08\x12%\n\x06status\x18\x08 \x01(\x0e\x32\x15.Status.ManagerStatus\x12\x14\n\x0cswitchStatus\x18\t \x01(\x08\x12\x0e\n\x06\x63osPhi\x18\n \x01(\x02\x12\x12\n\npowerLimit\x18\x0b \x01(\x02\x12\x0f\n\x07\x63ountry\x18\x0c \x01(\x05\x12$\n\tinverters\x18\r \x01(\x0b\x32\x11.Status.Inverters\x12,\n\rcommunication\x18\x0e \x01(\x0b\x32\x15.Status.Communication\x12(\n\x06\x65nergy\x18\x0f \x01(\x0b\x32\x18.Status.EnergyStatistics\x12\x17\n\x0fportiaErrorCode\x18\x10 \x01(\x05\x12\x17\n\x0fportiaSubsystem\x18\x11 \x01(\x05\x12\x1c\n\x05\x65vese\x18\x12 \x01(\x0b\x32\r.Status.Evese\x12!\n\nmetersList\x18\x13 \x03(\x0b\x32\r.Status.Meter\x12&\n\rbatteriesList\x18\x14 \x03(\x0b\x32\x0f.Status.Battery\x12*\n\x0cnotification\x18\x15 \x01(\x0b\x32\x14.Status.Notification\x12/\n\nserverComm\x18\x16 \x01(\x0b\x32\x1b.Status.ServerCommunication\x1a\xa0\x01\n\x04Site\x12\x16\n\x0eproductionWatt\x18\x01 \x01(\x02\x12\x15\n\rsizeLimitWatt\x18\x02 \x01(\x02\x12\x33\n\x0einverterStatus\x18\x03 \x01(\x0b\x32\x1b.Status.Site.InverterStatus\x1a\x34\n\x0eInverterStatus\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\t\x12\x11\n\tconnected\x18\x02 \x01(\t\x1a\x31\n\x10OptimizersStatus\x12\r\n\x05total\x18\x01 \x01(\x05\x12\x0e\n\x06online\x18\x02 \x01(\x05\x1a\xd9\x03\n\tInverters\x12$\n\x04left\x18\x01 \x01(\x0b\x32\x16.Status.Inverters.Unit\x12\'\n\x07primary\x18\x02 \x01(\x0b\x32\x16.Status.Inverters.Unit\x12%\n\x05right\x18\x03 \x01(\x0b\x32\x16.Status.Inverters.Unit\x1a\xd6\x01\n\x04Unit\x12\r\n\x05\x64spSn\x18\x01 \x01(\t\x12\x0f\n\x07voltage\x18\x02 \x01(\x02\x12\x32\n\x10optimizersStatus\x18\x03 \x01(\x0b\x32\x18.Status.OptimizersStatus\x12\x32\n\x0btemperature\x18\x04 \x01(\x0b\x32\x1d.Status.Inverters.Temperature\x12\x0b\n\x03\x66\x61n\x18\x05 \x01(\x05\x12\x11\n\terrorCode\x18\x06 \x01(\t\x12\x11\n\tsubSystem\x18\x07 \x01(\x05\x12\x13\n\x0b\x62\x61\x64Position\x18\x08 \x01(\t\x1a}\n\x0bTemperature\x12\r\n\x05value\x18\x01 \x01(\x05\x12\x32\n\x05units\x18\x02 \x01(\x0b\x32#.Status.Inverters.Temperature.Units\x1a+\n\x05Units\x12\x0f\n\x07\x63\x65lsius\x18\x01 \x01(\x08\x12\x11\n\tfarenheit\x18\x02 \x01(\x08\x1a\x0f\n\rCommunication\x1aU\n\x10\x45nergyStatistics\x12\r\n\x05today\x18\x01 \x01(\x02\x12\x11\n\tthisMonth\x18\x02 \x01(\x02\x12\x10\n\x08thisYear\x18\x03 \x01(\x02\x12\r\n\x05total\x18\x04 \x01(\x02\x1a\x07\n\x05\x45vese\x1aw\n\x05Meter\x12\x16\n\x0e\x63onnectionType\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\n\n\x02id\x18\x04 \x01(\t\x12\x14\n\x0c\x63urrentPower\x18\x05 \x01(\x02\x12\x13\n\x0btotalEnergy\x18\x06 \x01(\x02\x12\x0f\n\x07s0Pulse\x18\x07 \x01(\t\x1a\t\n\x07\x42\x61ttery\x1a\x0e\n\x0cNotification\x1a\xf2\x01\n\x13ServerCommunication\x12?\n\x06status\x18\x01 \x01(\x0b\x32/.Status.ServerCommunication.CommunicationStatus\x1a\x99\x01\n\x13\x43ommunicationStatus\x12\x1a\n\x12physicalConnection\x18\x01 \x01(\x08\x12\x12\n\nIP_Address\x18\x02 \x01(\x08\x12\x14\n\x0cGateway_Link\x18\x03 \x01(\x08\x12\x15\n\rInternet_Link\x18\x04 \x01(\x08\x12\x17\n\x0fMonitoring_Link\x18\x05 \x01(\x08\x12\x0c\n\x04S_OK\x18\x06 \x01(\x08\"\xad\x01\n\rManagerStatus\x12\x11\n\rSHUTTING_DOWN\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x12\x0b\n\x07STANDBY\x10\x02\x12\x0b\n\x07PAIRING\x10\x03\x12\x14\n\x10POWER_PRODUCTION\x10\x04\x12\x0f\n\x0b\x41\x43_CHARGING\x10\x05\x12\x0e\n\nNOT_PAIRED\x10\x06\x12\x0e\n\nNIGHT_MODE\x10\x07\x12\x13\n\x0fGRID_MONITORING\x10\x08\x12\x08\n\x04IDLE\x10\tb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'status_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _STATUS._serialized_start=17
  _STATUS._serialized_end=2047
  _STATUS_SITE._serialized_start=678
  _STATUS_SITE._serialized_end=838
  _STATUS_SITE_INVERTERSTATUS._serialized_start=786
  _STATUS_SITE_INVERTERSTATUS._serialized_end=838
  _STATUS_OPTIMIZERSSTATUS._serialized_start=840
  _STATUS_OPTIMIZERSSTATUS._serialized_end=889
  _STATUS_INVERTERS._serialized_start=892
  _STATUS_INVERTERS._serialized_end=1365
  _STATUS_INVERTERS_UNIT._serialized_start=1024
  _STATUS_INVERTERS_UNIT._serialized_end=1238
  _STATUS_INVERTERS_TEMPERATURE._serialized_start=1240
  _STATUS_INVERTERS_TEMPERATURE._serialized_end=1365
  _STATUS_INVERTERS_TEMPERATURE_UNITS._serialized_start=1322
  _STATUS_INVERTERS_TEMPERATURE_UNITS._serialized_end=1365
  _STATUS_COMMUNICATION._serialized_start=1367
  _STATUS_COMMUNICATION._serialized_end=1382
  _STATUS_ENERGYSTATISTICS._serialized_start=1384
  _STATUS_ENERGYSTATISTICS._serialized_end=1469
  _STATUS_EVESE._serialized_start=1471
  _STATUS_EVESE._serialized_end=1478
  _STATUS_METER._serialized_start=1480
  _STATUS_METER._serialized_end=1599
  _STATUS_BATTERY._serialized_start=1601
  _STATUS_BATTERY._serialized_end=1610
  _STATUS_NOTIFICATION._serialized_start=1612
  _STATUS_NOTIFICATION._serialized_end=1626
  _STATUS_SERVERCOMMUNICATION._serialized_start=1629
  _STATUS_SERVERCOMMUNICATION._serialized_end=1871
  _STATUS_SERVERCOMMUNICATION_COMMUNICATIONSTATUS._serialized_start=1718
  _STATUS_SERVERCOMMUNICATION_COMMUNICATIONSTATUS._serialized_end=1871
  _STATUS_MANAGERSTATUS._serialized_start=1874
  _STATUS_MANAGERSTATUS._serialized_end=2047
# @@protoc_insertion_point(module_scope)
